mutation Register($username: String!, $email: String!, $password: String!) {
    register(input: { username: $username, email: $email, password: $password }) {
        errors {
            field
            messages
        }
    }
    login(input: { usernameOrEmail: $username, password: $password }) {
        user {
            username
            email
        }
        errors {
            field
            messages
        }
    }
}

mutation Login($usernameOrEmail: String!, $password: String!) {
    login(input: { usernameOrEmail: $usernameOrEmail, password: $password }) {
        message
        errors {
            field
            messages
        }
    }
}

# Need to come up with some other name as `Logout` since the GraphQL code generator creates duplicate identifiers if we use that one.
mutation GraphQLLogout {
    logout {
        deleted
    }
}

mutation ResendVerificationEmail($email: String!) {
    resendVerificationEmail(input: { email: $email }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation VerifyAccount($token: String) {
    verifyAccount(input: { token: $token }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation SendPasswordResetEmail($email: String!) {
    sendPasswordResetEmail(input: { email: $email }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation ResetPassword($token: String, $newPassword: String!) {
    resetPassword(input: { token: $token, newPassword: $newPassword }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation UpdateUser(
    $username: String!
    $email: String!
    $title: String
    $bio: String
    $avatar: String
    $school: ID
    $subject: ID
) {
    updateUser(
        input: {
            username: $username
            email: $email
            title: $title
            bio: $bio
            avatar: $avatar
            school: $school
            subject: $subject
        }
    ) {
        message
        user {
            id
            username
            email
            title
            bio
            avatar
            score
            created
        }
        errors {
            field
            messages
        }
    }
}

mutation ChangePassword($oldPassword: String!, $newPassword: String!) {
    changePassword(input: { oldPassword: $oldPassword, newPassword: $newPassword }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation DeleteUser($password: String!) {
    deleteUser(input: { password: $password }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation Star($course: ID, $resource: ID) {
    star(input: { course: $course, resource: $resource }) {
        starred
        errors {
            field
            messages
        }
    }
}

mutation Vote($status: Int!, $comment: ID, $course: ID, $resource: ID) {
    vote(input: { status: $status, comment: $comment, course: $course, resource: $resource }) {
        vote {
            id
            status
        }
        targetScore
        errors {
            field
            messages
        }
    }
}

mutation CreateComment($text: String!, $attachment: String, $course: ID, $resource: ID, $comment: ID) {
    createComment(
        input: { text: $text, attachment: $attachment, course: $course, resource: $resource, comment: $comment }
    ) {
        message
        comment {
            id
            user {
                id
                username
                avatarThumbnail
            }
            text
            attachment
            modified
            created
            replyComments {
                id
                user {
                    id
                    username
                    avatarThumbnail
                }
                text
                attachment
                modified
                created
                score
                vote {
                    id
                    status
                }
            }
            score
            vote {
                id
                status
            }
        }
        errors {
            field
            messages
        }
    }
}

mutation DeleteComment($id: ID) {
    deleteComment(input: { id: $id }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation CreateContactMessage($subject: String!, $name: String, $email: String!, $message: String!) {
    createContactMessage(input: { subject: $subject, name: $name, email: $email, message: $message }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation CreateCourse($courseName: String!, $courseCode: String, $subjects: [ID], $school: ID!) {
    createCourse(input: { name: $courseName, code: $courseCode, subjects: $subjects, school: $school }) {
        message
        course {
            id
        }
        errors {
            field
            messages
        }
    }
}

mutation DeleteCourse($id: ID) {
    deleteCourse(input: { id: $id }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation CreateResource($resourceTitle: String!, $resourceType: ID!, $course: ID!, $file: String!) {
    createResource(input: { title: $resourceTitle, resourceType: $resourceType, course: $course, file: $file }) {
        message
        resource {
            id
        }
        errors {
            field
            messages
        }
    }
}

mutation DeleteResource($id: ID) {
    deleteResource(input: { id: $id }) {
        message
        errors {
            field
            messages
        }
    }
}

mutation MarkActivityAsRead($id: ID, $read: Boolean) {
    markActivityAsRead(input: { id: $id, read: $read }) {
        errors {
            field
            messages
        }
        activity {
            id
            description
            read
            targetUser {
                id
                username
                avatarThumbnail
            }
            course {
                id
            }
            resource {
                id
            }
            comment {
                id
            }
        }
    }
}

# Need to come up with some other name as `MarkAllActivitiesAsRead` since the GraphQL code generator creates duplicate identifiers if we use that one.
mutation GraphQLMarkAllActivitiesAsRead {
    markAllActivitiesAsRead {
        errors {
            field
            messages
        }
        activities {
            page
            pages
            hasNext
            hasPrev
            count
            objects {
                id
                description
                read
                targetUser {
                    id
                    username
                    avatarThumbnail
                }
                course {
                    id
                }
                resource {
                    id
                }
                comment {
                    id
                }
            }
        }
    }
}
