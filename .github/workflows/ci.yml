name: "CI"

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout code (pre merge)"
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/checkout@v2
      with:
        # Checkout the current commit instead of the commit that would get
        # made when the PR would be merged, since we want to validate that
        # the branch doesn't contain any merge commits and is rebased correctly.
        # We also fetch all the objects here so that we can do the comparisons.
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: "Check commits of the PR branch"
      if: ${{ github.event_name == 'pull_request' }}
      run: ./.github/check_commits.sh

    - name: "Checkout code (post merge)"
      uses: actions/checkout@v2

    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@0d135e0c2fc0dba0729c1a47ecfcf5a3c7f8579e  # v1.3.0

    - name: "Set up Docker layer caching"
      uses: ruohola/cache@main
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: "Build and cache the image"
      uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f  # v2.4.0
      with:
        context: .
        target: ci
        build-args: |
          GITHUB_RUN_NUMBER=${{ github.run_number }}
          CYPRESS_RECORD_KEY=${{ secrets.CYPRESS_RECORD_KEY }}
        tags: frontend-ci
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: "Move cache"
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: "Run linters, type-check, and tests"
      if: ${{ github.event_name == 'pull_request' }}
      run: >
        docker run --name frontend-ci frontend-ci
        && docker cp frontend-ci:/home/user/app/coverage/clover.xml .

    - name: "Upload coverage to Codecov"
      if: ${{ github.event_name == 'pull_request' }}
      uses: codecov/codecov-action@967e2b38a85a62bd61be5529ada27ebc109948c2  # v1.4.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./clover.xml
        fail_ci_if_error: true
