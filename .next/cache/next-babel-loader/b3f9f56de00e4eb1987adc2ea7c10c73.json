{"ast":null,"code":"var _jsxFileName = \"/Users/blomqma/projects/skole/frontend/molecules/IntersectingWrapper.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Animated } from '../atoms';\nexport var IntersectingWrapper = function IntersectingWrapper(_ref) {\n  var children = _ref.children,\n      time = _ref.time;\n  var element = useRef(null);\n\n  var _useState = useState(false),\n      isIntersecting = _useState[0],\n      setIsIntersecting = _useState[1];\n\n  useEffect(function () {\n    var node = element.current;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var isIntersecting = entry.isIntersecting;\n\n        if (!!element && !!element.current) {\n          if (isIntersecting) {\n            setIsIntersecting(true);\n            observer.unobserve(element.current);\n          }\n        }\n      });\n    });\n\n    if (node) {\n      observer.observe(node);\n    }\n\n    return function () {\n      if (node) {\n        observer.unobserve(node);\n      }\n    };\n  }, [element]);\n  return __jsx(Animated, {\n    launch: isIntersecting,\n    time: !!time ? time : 1,\n    ref: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/blomqma/projects/skole/frontend/molecules/IntersectingWrapper.tsx"],"names":["React","useEffect","useRef","useState","Animated","IntersectingWrapper","children","time","element","isIntersecting","setIsIntersecting","node","current","observer","IntersectionObserver","entries","forEach","entry","unobserve","observe"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,QAAT,QAAyB,UAAzB;AAOA,OAAO,IAAMC,mBAAoC,GAAG,SAAvCA,mBAAuC,OAAwB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxE,MAAMC,OAAO,GAAGN,MAAM,CAAmB,IAAnB,CAAtB;;AADwE,kBAE5BC,QAAQ,CAAC,KAAD,CAFoB;AAAA,MAEjEM,cAFiE;AAAA,MAEjDC,iBAFiD;;AAIxET,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,IAAI,GAAGH,OAAO,CAACI,OAAnB;AACA,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AACjDA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AAAA,YACbR,cADa,GACMQ,KADN,CACbR,cADa;;AAErB,YAAI,CAAC,CAACD,OAAF,IAAa,CAAC,CAACA,OAAO,CAACI,OAA3B,EAAoC;AAChC,cAAIH,cAAJ,EAAoB;AAChBC,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAG,YAAAA,QAAQ,CAACK,SAAT,CAAmBV,OAAO,CAACI,OAA3B;AACH;AACJ;AACJ,OARD;AASH,KAVgB,CAAjB;;AAWA,QAAID,IAAJ,EAAU;AACNE,MAAAA,QAAQ,CAACM,OAAT,CAAiBR,IAAjB;AACH;;AACD,WAAO,YAAM;AACT,UAAIA,IAAJ,EAAU;AACNE,QAAAA,QAAQ,CAACK,SAAT,CAAmBP,IAAnB;AACH;AACJ,KAJD;AAKH,GArBQ,EAqBN,CAACH,OAAD,CArBM,CAAT;AAuBA,SACI,MAAC,QAAD;AACI,IAAA,MAAM,EAAEC,cADZ;AAEI,IAAA,IAAI,EAAE,CAAC,CAACF,IAAF,GAASA,IAAT,GAAgB,CAF1B;AAGI,IAAA,GAAG,EAAEC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKF,QALL,CADJ;AASH,CApCM","sourcesContent":["import React, { ReactChild, useEffect, useRef, useState } from 'react';\nimport { Animated } from '../atoms';\n\ninterface Props {\n    children: ReactChild;\n    time?: number;\n}\n\nexport const IntersectingWrapper: React.FC<Props> = ({ children, time }) => {\n    const element = useRef<HTMLInputElement>(null);\n    const [isIntersecting, setIsIntersecting] = useState(false);\n\n    useEffect(() => {\n        let node = element.current;\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => {\n                const { isIntersecting } = entry;\n                if (!!element && !!element.current) {\n                    if (isIntersecting) {\n                        setIsIntersecting(true);\n                        observer.unobserve(element.current);\n                    }\n                }\n            });\n        });\n        if (node) {\n            observer.observe(node);\n        }\n        return () => {\n            if (node) {\n                observer.unobserve(node);\n            }\n        };\n    }, [element]);\n\n    return (\n        <Animated\n            launch={isIntersecting}\n            time={!!time ? time : 1}\n            ref={element}\n        >\n            {children}\n        </Animated>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}