{"ast":null,"code":"var _jsxFileName = \"/Users/blomqma/projects/skole/frontend/organisms/Login.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Input } from '../atoms';\nexport var Login = function Login() {\n  var _useState = useState(false),\n      loginOpen = _useState[0],\n      setLoginOpen = _useState[1];\n\n  var _useState2 = useState(''),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var handleUsername = function handleUsername(e) {\n    var target = e.target;\n    setUsername(target.value);\n    console.log(target.value);\n  };\n\n  var handlePassword = function handlePassword(e) {\n    var target = e.target;\n    setPassword(target.value);\n    console.log(target.value);\n  };\n\n  var handleLogin = function handleLogin(e) {\n    e.preventDefault(); //do magic\n\n    setUsername('');\n    setPassword('');\n    console.log(e);\n  };\n\n  return __jsx(React.Fragment, null, !loginOpen && __jsx(Button, {\n    onClick: function onClick() {\n      return setLoginOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in\"), loginOpen && __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: username,\n    onChange: function onChange(username) {\n      return handleUsername(username);\n    },\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Input, {\n    value: password,\n    onChange: function onChange(password) {\n      return handlePassword(password);\n    },\n    placeholder: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: function onClick(e) {\n      handleLogin(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Log in\")));\n};","map":{"version":3,"sources":["/Users/blomqma/projects/skole/frontend/organisms/Login.tsx"],"names":["Login","loginOpen","setLoginOpen","useState","username","setUsername","password","setPassword","handleUsername","target","e","console","handlePassword","handleLogin"],"mappings":";;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,SAAA,MAAA,EAAA,KAAA,QAAA,UAAA;AAEA,OAAO,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,MAAA,SAAA,GACWG,QAAQ,CADnB,KACmB,CADnB;AAAA,MAChBF,SADgB,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MACLC,YADK,GAAA,SAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,UAAA,GAESC,QAAQ,CAFjB,EAEiB,CAFjB;AAAA,MAEhBC,QAFgB,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAENC,WAFM,GAAA,UAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,UAAA,GAGSF,QAAQ,CAHjB,EAGiB,CAHjB;AAAA,MAGhBG,QAHgB,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAGNC,WAHM,GAAA,UAAA,CAAA,CAAA,CAAA;;AAKvB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,CAAA,EAA6B;AAChD,QAAMC,MAAM,GAAGC,CAAC,CAAhB,MAAA;AACAL,IAAAA,WAAW,CAACI,MAAM,CAAlBJ,KAAW,CAAXA;AACAM,IAAAA,OAAO,CAAPA,GAAAA,CAAYF,MAAM,CAAlBE,KAAAA;AAHJ,GAAA;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,CAAA,EAA6B;AAChD,QAAMH,MAAM,GAAGC,CAAC,CAAhB,MAAA;AACAH,IAAAA,WAAW,CAACE,MAAM,CAAlBF,KAAW,CAAXA;AACAI,IAAAA,OAAO,CAAPA,GAAAA,CAAYF,MAAM,CAAlBE,KAAAA;AAHJ,GAAA;;AAMA,MAAME,WAAW,GAAG,SAAdA,WAAc,CAAA,CAAA,EAAuB;AACvCH,IAAAA,CAAC,CADsC,cACvCA,GADuC,CAEvC;;AACAL,IAAAA,WAAW,CAAXA,EAAW,CAAXA;AACAE,IAAAA,WAAW,CAAXA,EAAW,CAAXA;AACAI,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,CAAAA;AALJ,GAAA;;AAQA,SACI,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACK,CAAA,SAAA,IACG,KAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMT,YAAY,CAAlB,IAAkB,CAAlB;AAAjB,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EAFR,SAEQ,CAFR,EAIKD,SAAS,IACN,KAAA,CAAA,MAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EACI,KAAA,CAAA,KAAA,EAAA;AACI,IAAA,KAAK,EADT,QAAA;AAEI,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,QAAA,EAAQ;AAAA,aAAIO,cAAc,CAAlB,QAAkB,CAAlB;AAFtB,KAAA;AAGI,IAAA,WAAW,EAHf,UAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,CADJ,EAMI,KAAA,CAAA,KAAA,EAAA;AACI,IAAA,KAAK,EADT,QAAA;AAEI,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,QAAA,EAAQ;AAAA,aAAII,cAAc,CAAlB,QAAkB,CAAlB;AAFtB,KAAA;AAGI,IAAA,WAAW,EAHf,UAAA;AAII,IAAA,IAAI,EAJR,UAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,CANJ,EAYI,KAAA,CAAA,MAAA,EAAA;AACI,IAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAK;AACVC,MAAAA,WAAW,CAAXA,CAAW,CAAXA;AAFR,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EAlBhB,QAkBgB,CAZJ,CALR,CADJ;AAzBG,CAAA","sourcesContent":["import React, { SyntheticEvent, useState } from 'react';\nimport { Button, Input } from '../atoms';\n\nexport const Login = () => {\n    const [loginOpen, setLoginOpen] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleUsername = (e: SyntheticEvent): void => {\n        const target = e.target as HTMLInputElement;\n        setUsername(target.value);\n        console.log(target.value);\n    };\n\n    const handlePassword = (e: SyntheticEvent): void => {\n        const target = e.target as HTMLInputElement;\n        setPassword(target.value);\n        console.log(target.value);\n    };\n\n    const handleLogin = (e: SyntheticEvent) => {\n        e.preventDefault();\n        //do magic\n        setUsername('');\n        setPassword('');\n        console.log(e);\n    };\n\n    return (\n        <>\n            {!loginOpen && (\n                <Button onClick={() => setLoginOpen(true)}>Sign in</Button>\n            )}\n            {loginOpen && (\n                <form>\n                    <Input\n                        value={username}\n                        onChange={username => handleUsername(username)}\n                        placeholder=\"Username\"\n                    />\n                    <Input\n                        value={password}\n                        onChange={password => handlePassword(password)}\n                        placeholder=\"Password\"\n                        type=\"password\"\n                    />\n                    <Button\n                        onClick={e => {\n                            handleLogin(e);\n                        }}\n                    >\n                        Log in\n                    </Button>\n                </form>\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}