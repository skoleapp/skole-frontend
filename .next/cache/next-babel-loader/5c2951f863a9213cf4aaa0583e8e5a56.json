{"ast":null,"code":"var _jsxFileName = \"/Users/blomqma/projects/skole/frontend/organisms/Login.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Input } from '../atoms';\nexport const Login = () => {\n  const {\n    0: loginOpen,\n    1: setLoginOpen\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n\n  const handleUsername = e => {\n    const target = e.target;\n    setUsername(target.value);\n    console.log(target.value);\n  };\n\n  const handlePassword = e => {\n    const target = e.target;\n    setPassword(target.value);\n    console.log(target.value);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault(); //do magic\n\n    setUsername('');\n    setPassword('');\n    console.log(e);\n  };\n\n  return __jsx(React.Fragment, null, !loginOpen && __jsx(Button, {\n    onClick: () => setLoginOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in\"), loginOpen && __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: username,\n    onChange: username => handleUsername(username),\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Input, {\n    value: password,\n    onChange: password => handlePassword(password),\n    placeholder: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: e => {\n      handleLogin(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Log in\")));\n};","map":{"version":3,"sources":["/Users/blomqma/projects/skole/frontend/organisms/Login.tsx"],"names":["React","useState","Button","Input","Login","loginOpen","setLoginOpen","username","setUsername","password","setPassword","handleUsername","e","target","value","console","log","handlePassword","handleLogin","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,IAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,UAA9B;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,cAAc,GAAIC,CAAD,IAA6B;AAChD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACAL,IAAAA,WAAW,CAACK,MAAM,CAACC,KAAR,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,KAAnB;AACH,GAJD;;AAMA,QAAMG,cAAc,GAAIL,CAAD,IAA6B;AAChD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACAH,IAAAA,WAAW,CAACG,MAAM,CAACC,KAAR,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,KAAnB;AACH,GAJD;;AAMA,QAAMI,WAAW,GAAIN,CAAD,IAAuB;AACvCA,IAAAA,CAAC,CAACO,cAAF,GADuC,CAEvC;;AACAX,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACH,GAND;;AAQA,SACI,4BACK,CAACP,SAAD,IACG,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFR,EAIKD,SAAS,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEE,QADX;AAEI,IAAA,QAAQ,EAAEA,QAAQ,IAAII,cAAc,CAACJ,QAAD,CAFxC;AAGI,IAAA,WAAW,EAAC,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEE,QADX;AAEI,IAAA,QAAQ,EAAEA,QAAQ,IAAIQ,cAAc,CAACR,QAAD,CAFxC;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,IAAI,EAAC,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAYI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEG,CAAC,IAAI;AACVM,MAAAA,WAAW,CAACN,CAAD,CAAX;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CALR,CADJ;AA6BH,CAtDM","sourcesContent":["import React, { SyntheticEvent, useState } from 'react';\nimport { Button, Input } from '../atoms';\n\nexport const Login = () => {\n    const [loginOpen, setLoginOpen] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleUsername = (e: SyntheticEvent): void => {\n        const target = e.target as HTMLInputElement;\n        setUsername(target.value);\n        console.log(target.value);\n    };\n\n    const handlePassword = (e: SyntheticEvent): void => {\n        const target = e.target as HTMLInputElement;\n        setPassword(target.value);\n        console.log(target.value);\n    };\n\n    const handleLogin = (e: SyntheticEvent) => {\n        e.preventDefault();\n        //do magic\n        setUsername('');\n        setPassword('');\n        console.log(e);\n    };\n\n    return (\n        <>\n            {!loginOpen && (\n                <Button onClick={() => setLoginOpen(true)}>Sign in</Button>\n            )}\n            {loginOpen && (\n                <form>\n                    <Input\n                        value={username}\n                        onChange={username => handleUsername(username)}\n                        placeholder=\"Username\"\n                    />\n                    <Input\n                        value={password}\n                        onChange={password => handlePassword(password)}\n                        placeholder=\"Password\"\n                        type=\"password\"\n                    />\n                    <Button\n                        onClick={e => {\n                            handleLogin(e);\n                        }}\n                    >\n                        Log in\n                    </Button>\n                </form>\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}